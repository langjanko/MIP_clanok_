% ....názov súboru je: literatura.bib
% kniha
@book{Coplien:MPD,
	author = "James O. Coplien",
	title = "Multi-Paradigm Design for C++",
	publisher = "Addison-Wesley",
	year = 1999
}

% článok v časopise
@article{Czarnecki:Staged,
    author = "Krzysztof Czarnecki and Simon Helsen and Ulrich Eisenecker",
    title = "Staged Configuration Through Specialization and Multi-Level Configuration of Feature Models",
    journal = "Software Process: Improvement and Practice",
    volume = 10,
    issue = 2,
    month = apr # "/" # jun,
    year = "2005",
    pages = "143--169",
}

% článok v zborníku
@inproceedings{Czarnecki:Progress,
	author = "Krzysztof Czarnecki and Chang Hwan Peter Kim",
	title = "Cardinality-Based Feature Modeling and Constraints: A Progress Report",
	booktitle = "International Workshop on Software Factories, OOPSLA 2005",
	month = oct,
	year = "2005",
	address = "San Diego, USA",
}

% technická správa (nepublikovaná)
@techreport{Kang:FODA,
	author = "Kyo C. Kang and Sholom G. Cohen and James A. Hess and William E. Novak and A. Spencer Peterson",
	title = "Feature-Oriented Domain Analysis ({FODA}): A Feasibility Study",
	institution = "Software Engineering Institute, Carnegie Mellon University",
	address = "Pittsburgh, USA",
	month = nov,
	year = 1990,
	number = "CMU/SEI-90-TR-21",
}

% zdroj na webe
@misc{PLP-Framework,
	author = "Software Engineering Institute, Carnegie Mellon University",
	title = "A Framework for Software Product Line Practice---Version 5.0",
	howpublished = "\url{http://www.sei.cmu.edu/productlines/frame_report/}",
}

@inproceedings{10.5555/2820489.2820506,
author = {Henderson-Sellers, B. and Gonzalez-Perez, C. and Eriksson, O. and \r{A}gerfalk, P. J. and Walkerden, G.},
title = {Software Modelling Languages: A Wish List},
year = {2015},
publisher = {IEEE Press},
abstract = {Contemporary software engineering modelling tends to rely on general-purpose languages,
such as the Unified Modeling Language. However, such languages are practice-based
and seldom underpinned with a solid theory -- be it mathematical, ontological or concomitant
with language use. The future of software modelling deserves research to evaluate
whether a language base that is compatible with these various elements as well as
being philosophically coherent offers practical advantages to software developers.},
booktitle = {Proceedings of the Seventh International Workshop on Modeling in Software Engineering},
pages = {72–77},
numpages = {6},
keywords = {foundational ontologies, modelling languages, philosophy, metamodelling, conceptual modelling, ontology},
location = {Florence, Italy},
series = {MiSE '15}
}

@inproceedings{Westphal2019,
  doi = {10.1109/models-c.2019.00105},
  url = {https://doi.org/10.1109/models-c.2019.00105},
  year = {2019},
  month = sep,
  publisher = {{IEEE}},
  author = {Bernd Westphal},
  title = {Teaching Software Modelling in an Undergraduate Introduction to Software Engineering},
  booktitle = {2019 {ACM}/{IEEE} 22nd International Conference on Model Driven Engineering Languages and Systems Companion ({MODELS}-C)}
}